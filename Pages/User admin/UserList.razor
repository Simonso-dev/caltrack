@using System.Net.Http.Headers;
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<h4>Users</h4>
    @if(users != null) {
        <table class="mb-2 table">
            <tr>
                <th>Username</th><th>Role</th><th>UserId</th>
            </tr>
        @foreach (var user in users) {
            <tr>
                <td>@user.Username</td>
                <td>@user.Role</td>
                <td>@user.UserId</td>
                <td>
                    <a href="edituser/@user.UserId">Edit</a> | 
                    <a href="deleteuser/@user.UserId">Delete</a>
                </td>
            </tr>
        }
        </table>
    }

@code {
    private List<User> users = new();

    protected override async Task OnInitializedAsync() {
        try {
            var token = await LocalStorage.GetItemAsStringAsync("token");
            HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token.Replace("\"", ""));
            users = await HttpClient.GetFromJsonAsync<List<User>>(NavigationManager.BaseUri + "api/users");
        }
        catch(Exception ex) {
            ex.GetBaseException();
        }
    }
}